# encoding: UTF-8

using ::Math::Algebra::Tropical::ContextNumeric
using ::Math::Algebra::Tropical::ContextMatrix

# `Ruuuby` aliases & function additions to existing Class{+Matrix+}
class ::Matrix

  alias_method :â–£?, :square?
  alias_method :áµ€, :transpose
  alias_method :num_rows, :row_count
  alias_method :num_cols, :column_count

  # @return [Enumerator]
  def âˆ€â‚“â†˜(&block)
    ðŸ›‘ ::ExceptionForMatrix::ErrDimensionMismatch unless self.â–£?
    self.each(:diagonal, &block)
  end

  # @return [Enumerator]
  def âˆ€â‚“áµ¢â†˜(&block)
    ðŸ›‘ ::ExceptionForMatrix::ErrDimensionMismatch unless self.â–£?
    self.each_with_index(:diagonal, &block)
  end

  # @return [Array] the diagonal of this matrix
  def â†˜_to_a; self.âˆ€â‚“â†˜.to_a; end

  # @return [Enumerator]
  def âˆ€â‚“áµ¢â±¼(&block); self.each_with_index(:all, &block); end

end
